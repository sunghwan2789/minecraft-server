on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 9 * * *'

env:
  IMAGE_NAME: ${{ github.repository }}
  BUNDLE_IMAGE_NAME: ${{ github.repository }}-bundle

jobs:
  build-bundle:
    runs-on: [self-hosted]
    strategy:
      matrix:
        host-tag: [ltsc2019, ltsc2016]
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          .\build-bundle.ps1 `
            -HostTag ${{ matrix.host-tag }} `
            -ImageName ${env:BUNDLE_IMAGE_NAME} `
            --isolation=hyperv
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: sunghwan2789
          password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}
      - uses: actions/download-artifact@v1.0.0
        with:
          name: bundle-digests
      - name: Push image
        run: |
          # Detect image changes using digests cache.
          $lastDigests = Get-Content .\bundle-digests | ConvertFrom-StringData
          # Get bundle images and push it if it has changes.
          $bundle = Get-Content .\bundle.json | ConvertFrom-Json
          foreach ($item in $bundle.items) {
            $image = '{0}:{1}-{2}' -f $env:BUNDLE_IMAGE_NAME, $item.name, ${{ matrix.host-tag }}
            $digest = docker inspect --format='{{index .RepoDigests 0}}' $image
            if ($digest -ne $lastDigests[$image]) {
              docker push $image
            }
            '{0}={1}' -f $image, $digest | Out-File '.\bundle-digests.new' -Append
          }
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: bundle-digests
          path: bundle-digests.new
  build:
    needs: build-bundle
    runs-on: [self-hosted]
    strategy:
      matrix:
        os: [nanoserver, windowsservercore]
        host-tag: [ltsc2016, 1607, 1709, 1803, ltsc2019, 1809]
        # not supported on GitHub-hosted runners
        # * 1607, 1709, 1803, 1903, 1909
        exclude:
          - os: nanoserver
            host-tag: ltsc2016
          - os: nanoserver
            host-tag: 1607
          - os: nanoserver
            host-tag: ltsc2019
        include:
          - host-tag: ltsc2016
            bundle-tag: ltsc2016
          - host-tag: 1607
            bundle-tag: ltsc2016
          - host-tag: 1709
            bundle-tag: ltsc2016
          - host-tag: 1803
            bundle-tag: ltsc2016
          - host-tag: ltsc2019
            bundle-tag: ltsc2019
          - host-tag: 1809
            bundle-tag: ltsc2019
    env:
      IMAGE_TAG: ${{ matrix.os }}-${{ matrix.host-tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          .\build-server.ps1 `
            -HostImageName ${{ matrix.os }} `
            -HostTag ${{ matrix.host-tag }} `
            -ImageName $env:IMAGE_NAME `
            -BundleImageName $env:BUNDLE_IMAGE_NAME `
            -BundleTag ${{ matrix.bundle-tag }} `
            --pull --isolation=hyperv
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: sunghwan2789
          password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}
      - uses: actions/download-artifact@v1.0.0
        with:
          name: ${{ matrix.os }}-${{ matrix.host-tag }}-digest
      - name: Push image
        run: |
          $image = '{0}:{1}' -f $env:IMAGE_NAME, $env:IMAGE_TAG
          $lastDigest = Get-Content ('{0}-digest' -f $env:IMAGE_TAG)
          $digest = docker inspect --format='{{index .RepoDigests 0}}' $image
          if ($digest -ne $lastDigest) {
            docker push $image
          }
          $digest | Out-File ('{0}-digest.new' -f $env:IMAGE_TAG)
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ matrix.os }}-${{ matrix.host-tag }}-digest
          path: ${{ matrix.os }}-${{ matrix.host-tag }}-digest.new
  # TODO: latest tag support
  # manifest:
  #   needs: build
  #   runs-on: windows-latest
  #   steps:
  #     - run: |
  #         docker manifest create
